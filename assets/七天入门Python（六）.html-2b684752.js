import{_ as n,X as s,Y as a,a2 as e}from"./framework-69dceb4c.js";const p={},t=e(`<p>大家好，我是Antvictor，励志要成为一名架构师的程序员。</p><p>上一篇我们说完了什么是集合、列表、字典及元组，而这些数据结构，我们好像只能一个个放入、一个个取出，那么，如果遇到不知道长度，还要取出所有，或者，将用户输入的某些内容记录，直到用户主动停止时，应该怎么办呢？</p><p>我们可以使用循环来做到上述的功能。</p><h1 id="什么是循环" tabindex="-1"><a class="header-anchor" href="#什么是循环" aria-hidden="true">#</a> 什么是循环</h1><p>循环就是在满足条件前重复做事，就像在学校里围着操场跑圈一样，目标是跑10圈，不满足10圈就要一直跑，跑完一圈就计一次数，当计数满足10圈时就会停下。</p><h1 id="为什么使用循环" tabindex="-1"><a class="header-anchor" href="#为什么使用循环" aria-hidden="true">#</a> 为什么使用循环</h1><p>数据放在一个集装箱里，而想一个个取出就需要重复工作，我们不可能一次性全部取出。也不清楚有多少数量，所以也不能安排对应数量的人去同时取出，所以我们只能重复的去搬运，直到集装箱里空了为止。 所以我们需要使用循环。</p><h1 id="如何使用呢" tabindex="-1"><a class="header-anchor" href="#如何使用呢" aria-hidden="true">#</a> 如何使用呢</h1><p>在Python中有两种循环方式，分别为：<code>while</code> 和 <code>for</code>。</p><h2 id="while" tabindex="-1"><a class="header-anchor" href="#while" aria-hidden="true">#</a> while</h2><p>首先看一下我们举的第一个例子，怎么用代码表示跑了10圈呢？ 这种边循环边计数的方式，在python大多使用while， 那么while怎么使用呢？</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>runNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> runNumber <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span> 
	runNumber <span class="token operator">+</span><span class="token operator">+</span><span class="token punctuation">;</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;这是第</span><span class="token interpolation"><span class="token punctuation">{</span>runNumber<span class="token punctuation">}</span></span><span class="token string">圈&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>while</code>的格式是：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">while</span> 布尔表达式<span class="token punctuation">:</span>
	满足要求时的处理
<span class="token keyword">else</span><span class="token punctuation">:</span>
	不满足时的处理
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="for" tabindex="-1"><a class="header-anchor" href="#for" aria-hidden="true">#</a> for</h2><p><code>Python</code>的<code>for</code>循环很简洁，只有一个格式：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> <span class="token operator">&lt;</span>variable<span class="token operator">&gt;</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>sequence<span class="token operator">&gt;</span><span class="token punctuation">:</span> 
	<span class="token operator">&lt;</span>statements<span class="token operator">&gt;</span> 
<span class="token keyword">else</span><span class="token punctuation">:</span> 
	<span class="token operator">&lt;</span>statements<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>for</code>循环可以遍历所有可迭代的对象，如一个列表或字符串。</p><p>我们来创建一个<code>boxes</code>, 向里面添加随机数量的值，然后再查询它，看我们能不能得到全部的值。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> random<span class="token punctuation">;</span>

boxes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    boxes<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>boxes<span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> boxes<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用随机数需要引入<code>random</code>，正好可以复习下之前学到的引用。 <code>range(start, stop, step)</code> 可以创建一个整数列表，可以传入三个参数：</p><ul><li><code>start</code>： 默认为0，可以不传。</li><li><code>stop</code>： 截止到哪个数，不包含<code>stop</code>, <code>range(2)</code>输出<code>[0,1]</code></li><li><code>step</code>: 步长，默认1，<code>range(2)</code>, 相当于<code>range(0,2,1)</code>。步长代表从第一个数后的每个数都是前一个数<code>+step</code>。</li></ul><h1 id="跳出循环" tabindex="-1"><a class="header-anchor" href="#跳出循环" aria-hidden="true">#</a> 跳出循环</h1><p>有时我们并不想查看全部的数据，而是满足后就不再继续查询了，那么应该怎么做呢？</p><p>没错，跳出循环，那么如何跳出呢？</p><p>使用<code>break</code>就可以了，让我们看一个示例：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>boxes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> boxes<span class="token punctuation">:</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">1</span>
<span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>那么如果是仅仅不想打印3呢？</p><p>只需要将<code>break</code> 改成 <code>continue</code>， <code>continue</code>是什么作用呢？</p><p>它的作用是跳过本次循环继续下次循环。也就是说：这次循环进来，遇到了<code>continue</code>，然后<code>continue</code>之后的代码就不执行了，回到循环的开始位置继续下一次循环。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>boxes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> boxes<span class="token punctuation">:</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">continue</span><span class="token punctuation">;</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果为：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">4</span>
<span class="token number">5</span>
<span class="token number">6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h1><p>本篇我们了解了<code>Python</code>中<code>while</code>, <code>for</code>循环以及如何跳出循环。</p><p>下一篇我们来讲一下什么是异常，以及怎么处理异常。</p><p>如果有表达有误的地方，欢迎评论区讨论，我会及时回复并修改有误的内容，感谢观看</p>`,39),o=[t];function c(i,l){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","七天入门Python（六）.html.vue"]]);export{u as default};
