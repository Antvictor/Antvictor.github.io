import{_ as d,X as t,Y as a,$ as e,a0 as n,a2 as i,Z as r,C as c}from"./framework-2b931fd9.js";const s={},l=e("h1",{id:"七天入门python-一",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#七天入门python-一","aria-hidden":"true"},"#"),n(" 七天入门Python（一）")],-1),h=e("p",null,[n("大家好，我是Antvictor，一个励志要成为博学程序员的程序员。"),e("br"),n(" 闲话少说，接下来请和我一起进入《七天入门Python》，首先是Python安装。")],-1),u=e("h1",{id:"python安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#python安装","aria-hidden":"true"},"#"),n(" Python安装")],-1),p={href:"https://www.Python.org/",target:"_blank",rel:"noopener noreferrer"},g=e("strong",null,"Download",-1),v=r(`<figure><img src="https://img.exceedy.top/img/20230609110611.png" alt="image-20230609110610987" tabindex="0" loading="lazy"><figcaption>image-20230609110610987</figcaption></figure><p>Python官网会根据系统默认展示对应系统的最新版本安装包，下载成功后点击安装。</p><p>这里以Mac为例：首先将Python拖入安装应用。</p><p>等待安装完成，打开终端，输入<code>python3</code> (Win用户要输入<code>python</code>,这点Mac用户和Win用户是不同的)验证版本及是否安装成功。</p><div class="language-Python line-numbers-mode" data-ext="Python"><pre class="language-Python"><code>$ python3
Python 3.9.6 (default, Oct 18 2022, 12:41:40)
[Clang 14.0.0 (clang-1400.0.29.202)] on darwin
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&gt;&gt;&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里可以看到，整个终端分为了三类，一种是<code>$</code>、一种是前面没有任何特殊符号的空白，一种是<code>&gt;&gt;&gt;</code> , 他们有什么区别呢？首先<code>$</code>属于终端标识，在<code>$</code>后面输入是与系统进行交互的代码<br><code>&gt;&gt;&gt;</code> 为<code>Python</code>代码输入，在该标识后面输入的为Python代码<br> 前面是<code>空白</code>的代表了结果输出，是打印到终端的一些内容，属于交互结果<br> 至此Python安装成功。如果是Win的用户，也是下载完后，直接点击安装即可， 同时记得勾选配置环境变量，这样就不用手动配置环境了，之后在<code>cmd</code> 中输入<code>python</code>来确定是否安装成功。</p><h2 id="首次运行" tabindex="-1"><a class="header-anchor" href="#首次运行" aria-hidden="true">#</a> 首次运行</h2><p>在刚刚的终端中让<code>Python</code>打印<code>Hello World</code>。这是一个有力量的词汇，打印成功意味着我们正式向世界宣告我们来到了编程的世界。</p><div class="language-Python line-numbers-mode" data-ext="Python"><pre class="language-Python"><code>&gt;&gt;&gt; print(&quot;Hello World&quot;)
Hello World
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>恭喜！！在空白处打印出了<code>Hello World</code>, 首次运行成功。那么在此期间Python怎么工作的呢？<br> 简单来讲：Python识别的<code>print</code>就会将括号里面的值打印到终端。</p><h1 id="python怎么表达数据呢" tabindex="-1"><a class="header-anchor" href="#python怎么表达数据呢" aria-hidden="true">#</a> Python怎么表达数据呢？</h1><p>每个高级的编程语言目标都是将人类可以理解的内容转化为机器可以理解的，然后让机器输出为人类可以理解的内容。<br> 那么我们应该怎么告诉Python人类的信息呢？这就需要看Python怎么提供数据的表达形式了。</p><h2 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h2><p>首先在Python中字符串使用<code>&quot;&quot;</code> 或者<code>&#39;&#39;</code>表示。<br> 简单解释一下<strong>字符串</strong>是什么，字符串就是人类可以书写出来的任何字符。就像一开始我们打印的<code>Hello World</code>一样，这就是字符串，同样他也是用的<code>&quot;&quot;</code>。 可以实验一下用<code>&#39;&#39;</code>输出一些你想说的话。</p><div class="language-Python line-numbers-mode" data-ext="Python"><pre class="language-Python"><code>&gt;&gt;&gt; print(&#39;你好，世界&#39;)
你好，世界
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意：所有开发语言要求我们编写的内容，都是英文，包括括号，引号等内容。如果输入成了中文，那么就会报错了。</p><h2 id="数字" tabindex="-1"><a class="header-anchor" href="#数字" aria-hidden="true">#</a> 数字</h2><p>了解完了Python怎么表达字符串，那么再来看一下必不可少的数字Python怎么表达。</p><p>首先在Python中数字分为：整数类型、浮点类型。 整数就是我们所熟知的数学中的整数包括负整数，而浮点类型就是小数。表达也和数学中一致。</p><div class="language-Python line-numbers-mode" data-ext="Python"><pre class="language-Python"><code>&gt;&gt;&gt; print(1)
1
&gt;&gt;&gt; print(-1)
-1
&gt;&gt;&gt; print(0.01)
0.01
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Python中的数据类型到此就聊完了，其实不光Python，学习其他语言也是要先了解数据类型怎么表达，因为这是一切语言的基础。</p><h1 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h1><p>看到这里，可能就有聪明的小伙伴要问了：难道我们只能使用<code>print</code>输出数据吗？有没有其他方式可以表达数据呢？<br></p><p>当然是有的，这就不得不说<strong>变量</strong> 这个东西了，正如他的名称，他是可以变的。那么怎么表达变量呢？<br> 其实很简单： <strong>用一个字母或_开头加任意字母、数字、下划线组成的内容即可表达为变量</strong>。 不过这不是创建了变量，只是命名。那么怎么创建呢？<br> 使用<code>=</code>进行创建，在<code>=</code> 的左边写上我们的变量名，<code>=</code>的右边写上数据，那么这个变量就代表了这个数据。<br> 如：</p><div class="language-Python line-numbers-mode" data-ext="Python"><pre class="language-Python"><code>&gt;&gt;&gt; a = &#39;Hello&#39;
&gt;&gt;&gt; print(a)
Hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么变量的可变体现在哪呢？请看：</p><div class="language-Python line-numbers-mode" data-ext="Python"><pre class="language-Python"><code>&gt;&gt;&gt; a = &quot;World&quot;
&gt;&gt;&gt; print(a)
World
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样是打印<code>a</code>这个变量，但他已经被修改为了<code>World</code>。<br> 变量的这个可变也是编程中一个重要的内容，向用户展现的数据会发生变化就是对变量的数据进行了修改。</p><p>下一章，我们要学的是编辑器和函数，敬请期待。 如果有表达有误的地方，欢迎评论区讨论，我会及时回复并修改有误的内容，感谢观看。</p>`,29);function y(m,b){const o=c("ExternalLinkIcon");return t(),a("div",null,[l,h,u,e("p",null,[n("从"),e("a",p,[n("Python官网"),i(o)]),n("找到"),g,n("下载对应的安装包，python3.6及以上即可。")]),v])}const _=d(s,[["render",y],["__file","七天入门Python（一）.html.vue"]]);export{_ as default};
