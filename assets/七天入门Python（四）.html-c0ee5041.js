import{_ as n,X as s,Y as a,a2 as e}from"./framework-69dceb4c.js";const p={},t=e(`<p>大家好，我是Antvictor，一个励志要成为架构师的程序员。 在之前我们学习完了什么是类、模块、包、函数等，这些更像是外包装，今天我们来学一下内骨骼：运算符、逻辑运算符及条件判断。</p><h1 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符" aria-hidden="true">#</a> 运算符</h1><p>写一段代码，不可能是平铺直叙的，它是逻辑性的，而逻辑需要什么来表达呢？</p><p>需要逻辑运算和条件判断。然后除了这两个，还有一个需要注意的是数的计算，就像计算机一开始发明出来也是为了算数一样，我们写代码也会经常会遇到算数问题，那么怎么在代码中进行计算呢？</p><p>没错，就和数学一样，加(+)减(-)乘(<code>*</code>)除(/)。</p><p>在开发语言中一般都用/来代表除。</p><p>而在这些运算的基础上，python还支持取余(%),取整(//),幂(<code>**</code>).</p><p>取余的意思是：不能被整除的数，在除完后剩下的数，也就是余数。</p><p>取整就是：整除后的结果是什么 我们来实战一下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 2.5</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># 5</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># -1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># 6</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">//</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">%</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 25</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多个运算符在一起时，规则和数学相同，先算括号内的，然后算幂，之后算乘除，最后算加减。</p><h1 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a> 逻辑运算符</h1><p>这和数学也一样，逻辑运算符为：不等于(!=)、大于(&gt;)、小于(&lt;)、大于等于(&gt;=)、小于等于(&lt;=)、等于(<code>==</code>)。</p><p>这里有个特殊的等于，怎么和数学的不一样呢？因为在程序中=已经被赋值给使用了，所以在逻辑运算中的等于为了区分使用了<code>==</code>。</p><p>在数学中，如果一个逻辑运算结果是正确的，我们一般会说对，错误的便说错，而在Python中使用的是之前我们学的Boolean，对便是True，错便是Flase。</p><p>实战看一下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">&gt;=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">&lt;=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">!=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="条件判断" tabindex="-1"><a class="header-anchor" href="#条件判断" aria-hidden="true">#</a> 条件判断</h1><p>现在我们学完了运算符和逻辑运算符，那么如何让a&gt;b的时候输入a，a&lt;b的时候输出b呢？ 这里便要用到我们的条件判断语句了。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> a<span class="token punctuation">:</span>
	do something
<span class="token keyword">elif</span> b<span class="token punctuation">:</span>
	do something
<span class="token keyword">else</span><span class="token punctuation">:</span>
	do something
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的语句简单解释一下：如果a为True，那么做什么，如果a为False且b为True就做什么，两个都为False那么做什么。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">5</span>
b <span class="token operator">=</span> <span class="token number">3</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有额外的if要求，那么就可以直接写else了，甚至我们有些条件只需要True才有逻辑，False没有逻辑时，可以只写if。</p><p>有时候我们可能不止需要一个条件判断，需要多个判断，比如a&gt;b且b&gt;c输出b。以及a+b&gt;c或a&gt;b 都输出a。那么我们需要使用<code>and</code>来代表且，<code>or</code>来代表或:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">5</span>
b <span class="token operator">=</span> <span class="token number">8</span>
c <span class="token operator">=</span> <span class="token number">12</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b <span class="token keyword">and</span> b <span class="token operator">&gt;</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment"># 没有输出</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token operator">&gt;</span>c <span class="token keyword">or</span> a <span class="token operator">&gt;</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h1><p>至此我们学完了运算符、逻辑运算符和条件判断，接下来我们将学习什么是循环。<br> 如果有表达有误的地方，欢迎评论区讨论，我会及时回复并修改有误的内容，感谢观看</p>`,27),o=[t];function c(l,i){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","七天入门Python（四）.html.vue"]]);export{u as default};
